package com.example.aademo;import android.os.Bundle;import android.text.Editable;import android.text.TextWatcher;import android.util.DisplayMetrics;import android.util.Log;import android.view.View;import android.view.View.OnClickListener;import android.widget.Button;import android.widget.EditText;import android.widget.TextView;public class ParseIntActivity extends BaseActivity {	TextView tv;	EditText edit_text;	Button btn_ok;	DisplayMetrics displayMetrics;	int startIndex=0;		@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		setContentView(R.layout.parseint_main);		tv = (TextView) findViewById(R.id.parseint_tv);		edit_text = findView(R.id.parseint_edit);		btn_ok = findView(R.id.parseint_btn);		edit_text.addTextChangedListener(new TextWatcher() {			@Override			public void onTextChanged(CharSequence s, int start, int before, int count) {			}			@Override			public void beforeTextChanged(CharSequence s, int start, int count, int after) {				startIndex=start;			}			@Override			public void afterTextChanged(Editable s) {				String str = s.toString();				int pointIndex = str.indexOf(".");				int endIndex=startIndex+1;				if (pointIndex == -1) {					if (str.length() > 8&&endIndex<=s.length())s.delete(startIndex, endIndex); 				} else if (pointIndex == 0) {					if (str.length() > 9&&endIndex<=s.length())s.delete(startIndex, endIndex);				} else if (pointIndex > 8&&endIndex<=s.length()) {//如果小数点所在的位数大于8,则说明用户输了小数点前第9位数字					s.delete(startIndex,endIndex);				} else if (pointIndex < str.length() - 3) {					s.delete(pointIndex + 3, s.length());				}			}		});		btn_ok.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				tv.setText(getYuanToFen(edit_text.getText().toString()));			}		});	}	/**	 * 将元转换为分计算 一共分4种情况 1.没有小数点---->直接补00 2.明小数点是最后一个,并且后面没有数字	 * ---->替换小数点为空字符串,然后补00 3.小数点在第一个,前面没有数字 ----> 替换小数点为空字符串,然后补00	 * 4.小数点之后有数字(1个或2个) ---->替换小数点为空字符串,然后数字 综上,无论那种情况其实都是需要在后面补数字的,所以默认数字为:	 * lastTwoNum[0]='0'; lastTwoNum[1]='0';	 * 然后只需要判断第4种情况,然后将后面的位数替换掉这个数组的数字,然后在结束的时候执行str=str.replace(".",	 * "")+lastTwoNum[0]+lastTwoNum[1]; 即可	 */	public String getYuanToFen(String str) {		char[] lastTwoNum = new char[2];		lastTwoNum[0] = '0';		lastTwoNum[1] = '0';		int pointIndex = str.indexOf(".");		// 说明是第4种情况		if (pointIndex < str.length() - 1 && pointIndex != -1 && pointIndex != 0) {			char[] lastNum = str.split("\\.")[1].toCharArray();			int len = lastNum.length;			for (int i = 0; i < len; i++) {				if (i >= 2)					break;				lastTwoNum[i] = lastNum[i];			}		}		if (pointIndex != -1 && pointIndex != 0) {			str = str.substring(0, pointIndex);		}		str = str.replace(".", "") + lastTwoNum[0] + lastTwoNum[1];		return str;	}}